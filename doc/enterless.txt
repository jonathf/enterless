*enterless.txt*	directory viewer

==============================================================================
OVERVIEW                                                             *enterless*

Enterless is a minimalist directory viewer built for fast file browsing.

Enterless' features are essentionally a search forward system that allows with
a minimum of key presses to access any files on the filesystems without any
form for search, fuzzy or othervise. It does so by completing any path as much
as possible and automatically enters folders and files when unbiquitous.
For example, using default mappings,
  :Enterless ~~
will start the directory viewer and list files in you home folder. Lets assume
that the following folders are pressent:
  bar/
  foo/
  foobar/
By pressing 'b', Enterless, will automatically enter the folder bar and list
its content. This is because bar is the only folder starting with the letter
b. If bar was a file, the file would instead be opened.

If however 'f' is pressed, two things happens.
1. The cursor jumps down to the first ouccurence of the file with prefix 'f'.
2. Each filename starting with 'f' is highlighted.
To enter the folder foo/, one could either press '/' to complete the path, or
press <CR>. Equivalently for foobar/, one could press 'b' for completion or
'<DOWN><CR>' for cursor move and enter.

If more files and folders have partially common names that prohibits
completion on two presses, this method works recursivly until only one name is
selected.

==============================================================================
OVERVIEW                                                               *dirvish*

Enterless is built upon Dirvish, and support all of it's features. They are as
follows.

It basically dumps a list of paths into a Vim buffer and provides some
mappings to work with those paths. By working with built-in Vim mechanisms
instead of inventing peripheral imitations, users (and other plugins) can
compose and build upon known Vim concepts.

Because each Enterless buffer-name is the literal directory path, you can |:cd|
to the directory, >
  :cd %
create a new file, >
  :edit %/foo.txt
|expand()| the directory path, >
  :let &titlestring = expand('%', 1)
and use complementary plugin commands like |]f|/|[f| (unimpaired.vim).

Because each enterless buffer is just a list of paths, you can use normal Vim
commands to |y|ank, |:read|, |gf|, etc. All of the built-in CTRL-W mappings
also work as expected.

It's totally fine to slice, dice, and smash any Enterless buffer: it will
never modify the filesystem. Just press `<f2>` to reload the default listing.

==============================================================================
API                                                              *enterless-api*

:Enterless                                                          *:Enterless*
    Open the |current-directory|.

:Enterless {path}
    Open the directory at {path}, or its parent directory if {path} is a file.
    To open the directory of the current file: >
        :Enterless %

[range]enterless#open({cmd}, {bg})
    Perform {cmd} ("edit", "vsplit", "split", "tabedit") on the files in
    [range]. {bg} must be 0 (open files in current window) or 1 (open files in
    the "background").

b:enterless
w:enterless

==============================================================================
MAPPINGS                                                    *enterless-mappings*

Enterless provides these default buffer-local mappings and commands.

    
    <ESC>           Quit Enterless and return to the original file.
    <CR>            Open file.
    <F2>            Reload folder
    a-z.-_/         Search forward and enter fold/file if found
    <BS>            Abort search forward. If no search is found, go to parent
                    folder.

If default mappings isn't what you want, there are many options to redefined
them. For searching forward mappings, see |enterless-options| for various
unmappings.

To redefine mappings, the following plugs are provided.

    <plug>(enterless_backwards) Cancel search or jump folder down (like <BS>)
    <plug>(enterless_open)      Open file (like <CR>).
    <plug>(enterless_quit)      Quit Enterless (like <ESC>).
    <plug>(enterless_reload)    Reload folder (like <F2>).

In addition, each key 'a' through 'z', 'A' through 'Z', '0' through '9' and
'.', '-', '_' and '/' has their own plug map:

    <plug>(enterless_#)         Search forward, where '#' is replaced with the
                                various keys


==============================================================================
OPTIONS                                                      *enterless-options*

g:enterless_hide_hidden = 1                            *g:enterless_hide_hidden*

    1: This will hide hidden files from views, unless the character search
       forwards with |.| is evoked.

g:enterless_ignorecase = 1                              *g:enterless_ignorecase*

    1: Search forward will only ignore the case of the character searched for.

g:enterless_autoenter = 1                                *g:enterless_autoenter*

    1: If only one match is found in current search pattern, enter folder or
       start editing file.

g:enterless_bindi_lower = 0                            *g:enterless_bindn_lower*

    1: Bind the characters 'a' through 'z' in insert mode to search forward.

g:enterless_bindi_upper = 0                            *g:enterless_bindn_upper*

    1: Bind the characters 'Z' through 'Z' in insert mode to search forward.

g:enterless_bindi_digits = 0                          *g:enterless_bindn_digits*

    1: Bind the characters '0' through '9' in insert mode to search forward.

g:enterless_bindi_special = 0                        *g:enterless_bindn_special*

    1: Bind the characters '_', '-', '.' and '/' in insert mode to search
       forward.

g:enterless_bindn_lower = 1                            *g:enterless_bindn_lower*

    1: Bind the characters 'a' through 'z' in normal mode to search forward.

g:enterless_bindn_upper = 0                            *g:enterless_bindn_upper*

    1: Bind the characters 'Z' through 'Z' in normal mode to search forward.

g:enterless_bindn_digits = 0                          *g:enterless_bindn_digits*

    1: Bind the characters '0' through '9' in normal mode to search forward.

g:enterless_bindn_special = 1                        *g:enterless_bindn_special*

    1: Bind the characters '_', '-', '.' and '/' in normal mode to search
       forward.

g:enterless_hijack_netrw = 1                          *g:enterless_hijack_netrw*

    0: ":edit /path/to/dir/" and "vim /path/to/dir/" will be handled by
       |netrw| instead of Enterless.

g:enterless_unbind_all = 0                              *g:enterless_unbind_all*

    1: Don't use any default mapping. For detailed control, use the plug
       bindings.

g:enterless_relative_paths = 0                      *g:enterless_relative_paths*

    1: Make paths in the Enterless buffer relative to |getcwd()|.
       Note: Recommended on Vim 7.3 (because it lacks |conceal|).

The "enterless" |FileType| event fires after Enterless is initialized, so all
mappings, options, and content can be overridden by handling this event.
Example: >

    augroup my_enterless_events
      autocmd!
      " Map t to "open in new tab".
      autocmd FileType enterless
        \  nnoremap <buffer> t :call enterless#open('tabedit', 0)<CR>
        \ |xnoremap <buffer> t :call enterless#open('tabedit', 0)<CR>

      " Enable :Gstatus and friends.
      autocmd FileType enterless call fugitive#detect(@%)

      " Map CTRL-R to reload the Enterless buffer.
      autocmd FileType enterless nnoremap <buffer> <C-R> :<C-U>Enterless %<CR>

      " Map `gh` to hide dot-prefixed files.
      " To "toggle" this, just press `R` to reload.
      autocmd FileType enterless nnoremap <buffer>
        \ gh :keeppatterns g@\v/\.[^\/]+/?$@d<cr>
    augroup END
<
==============================================================================
 vim:tw=78:ts=8:ft=help:norl:
